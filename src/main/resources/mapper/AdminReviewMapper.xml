<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="in.hangang.mapper.admin.AdminReviewMapper">

    <select id="getReportedReview" resultType="in.hangang.domain.report.ReviewReport">
        SELECT l.id, r.content,b.type, l.user_id, l.content_id, re.comment, l.created_at, l.updated_at
        FROM hangang.report_log AS l
                 JOIN hangang.report AS r ON l.report_id = r.id
                 JOIN hangang.board_type AS b ON l.board_type_id = b.id
                 JOIN hangang.review AS re ON l.content_id = re.id
        WHERE l.board_type_id = 3 AND l.is_deleted = 0 AND re.is_deleted = 0;
    </select>

    <delete id="deleteReviewReported">
        UPDATE hangang.review SET is_deleted = 1 WHERE id = #{review.id};
        UPDATE hangang.lecture SET total_rating = IFNULL(ROUND((SELECT AVG(rating) FROM hangang.review WHERE lecture_id = #{review.lecture_id} AND is_deleted = 0), 2), 0) WHERE id=#{review.lecture_id};
        UPDATE hangang.lecture SET review_count = review_count - 1 WHERE id = #{review.lecture_id};
        UPDATE hangang.review_assignment SET is_deleted = 1 WHERE review_id = #{review.id};
        UPDATE hangang.review_hash_tag SET is_deleted = 1 WHERE review_id = #{review.id};
        UPDATE hangang.review_like SET is_deleted = 1 WHERE review_id = #{review.id};
        UPDATE hangang.report_log SET is_deleted = 1 WHERE content_id = #{review.id} AND board_type_id = 3;
    </delete>

    <select id="getReport" resultType="Long">
        SELECT id FROM hangang.report_log WHERE board_type_id = 3 AND content_id = #{id} and is_deleted = 0 ;
    </select>
    <update id="deleteReport">
        UPDATE hangang.report_log SET is_deleted = 1 WHERE content_id = #{id} AND board_type_id = 3;
    </update>


</mapper>